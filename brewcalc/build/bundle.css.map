{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n\r\nlet numBottles=20;\r\nlet sugarPerBottle=2.5;\r\nlet volPerBottle=5;\r\n\r\nlet sugarNeeded = 0;\r\nlet waterNeeded = 0;\r\n\r\nfunction calcRequired(numBottles, sugarPerBottle, volPerBottle){\r\n  let totalSugar = sugarPerBottle * numBottles;\r\n  let totalSolution = volPerBottle * numBottles;\r\n\r\n  sugarNeeded = totalSugar;\r\n  waterNeeded = findWaterMassForDilution(totalSugar, totalSolution);\r\n}\r\n\r\nfunction calcBrix(sugarMass, waterMass){\r\n  return (sugarMass/(sugarMass+waterMass)) * 100;\r\n}\r\n\r\nfunction brixToSG( brix ){\r\n  return (brix / (258.6-((brix / 258.2)*227.1))) + 1;\r\n}\r\n\r\nfunction volume( sugarMass, waterMass){\r\n  let brix = calcBrix(sugarMass, waterMass);\r\n  let sg = brixToSG(brix);\r\n  let volume = (sugarMass+waterMass) / sg;\r\n  return volume;\r\n}\r\n\r\nfunction findWaterMassForDilution(sugar, desiredVolume){\r\n  let estimate = desiredVolume;\r\n  let hi = estimate * 2;\r\n  let lo = 0;\r\n  const allowedError = 0.05; //ml\r\n  let estimatedVolume = volume(sugar, estimate);\r\n  let iterCount = 0;\r\n  const maxIters = 50;\r\n\r\n  while( Math.abs(estimatedVolume - desiredVolume) > allowedError &&\r\n    iterCount++ < maxIters){\r\n      if( estimatedVolume > desiredVolume){\r\n        hi = estimate;\r\n      }else{\r\n        lo = estimate;\r\n      }\r\n\r\n      estimate = (lo+hi) * 0.5;\r\n      estimatedVolume = volume(sugar, estimate);\r\n  }\r\n\r\n  return estimate;\r\n}\r\n\r\n$:{\r\n  calcRequired(numBottles, sugarPerBottle, volPerBottle);\r\n}\r\n\r\n</script>\r\n\r\n<svelte:window/>\r\n\r\n<svelte:head>\r\n  <style>\r\n    body {\r\n      background-color: #223344;\r\n      color: #93FFE9;\r\n    }\r\n  </style>\r\n</svelte:head>\r\n\r\n<style> \r\n  input{\r\n    border-radius: 8px;\r\n    border: 2px solid #72A98F;\r\n    background-color: #4ECDC4;\r\n  }\r\n\r\n  label{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 350px;\r\n\r\n  }\r\n\r\n</style>\r\n\r\n<main>\r\n  <h1>Sugar Solution Priming Calculator</h1>\r\n\r\n  <label>Bottles <input type=\"number\" bind:value={numBottles} min=\"1\"/></label>\r\n  <label>Sugar per Bottle(g) <input type=\"number\" bind:value={sugarPerBottle} min=\"0.1\" step=\"0.1\"/></label>\r\n  <label>Vol per Bottle(ml) <input type=\"number\" bind:value={volPerBottle} min=\"0.1\" step=\"0.1\"/></label>\r\n  <br/>\r\n  <p>You need {sugarNeeded.toFixed(1)}g of sugar and {waterNeeded.toFixed(1)}g of water.</p>\r\n</main>\r\n"
  ],
  "names": [],
  "mappings": "AA0EE,mBAAK,CAAC,AACJ,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,gBAAgB,CAAE,OAAO,AAC3B,CAAC,AAED,mBAAK,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,aAAa,CAC9B,KAAK,CAAE,KAAK,AAEd,CAAC"
}